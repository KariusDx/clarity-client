<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    CRUK-CI Genologics REST API Java Client.
    Copyright (C) 2013 Cancer Research UK Cambridge Institute.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.2.xsd
                           http://www.springframework.org/schema/oxm
                           http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <context:annotation-config />

    <bean id="filestoreSFTPSessionFactory" class="org.springframework.integration.sftp.session.DefaultSftpSessionFactory"/>

    <bean id="genologicsHttpClientParams" class="org.apache.commons.httpclient.params.HttpClientParams">
        <property name="authenticationPreemptive" value="true"/>
    </bean>

    <bean id="genologicsHttpConnectionManagerParams" class="org.apache.commons.httpclient.params.HttpConnectionManagerParams"/>

    <bean id="genologicsHttpConnectionManager" class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager">
        <property name="params" ref="genologicsHttpConnectionManagerParams"/>
    </bean>

    <bean id="genologicsHttpClient" class="org.apache.commons.httpclient.HttpClient">
        <constructor-arg ref="genologicsHttpClientParams"/>
        <constructor-arg ref="genologicsHttpConnectionManager"/>
    </bean>

    <bean id="genologicsClientHttpRequestFactory" class="org.springframework.http.client.CommonsClientHttpRequestFactory">
        <constructor-arg ref="genologicsHttpClient"/>
        <property name="connectTimeout" value="15000"/>
        <property name="readTimeout" value="0"/>
    </bean>

    <bean name="genologicsHttpClientTimingAspect" class="org.cruk.genologics.api.debugging.HttpClientTimingAspect"/>

    <aop:config>
        <aop:aspect ref="genologicsHttpClientTimingAspect">
            <aop:around
                pointcut="execution(public * executeMethod(..)) and bean(genologicsHttpClient)"
                method="timeCall"/>
        </aop:aspect>
    </aop:config>


    <bean id="genologicsNamespaceMatcher" class="org.cruk.genologics.api.jaxb.KnownNamespacePrefixMatcher"/>

    <util:list id="genologicsModelPackages">
        <value>com.genologics.ri</value>
        <value>com.genologics.ri.artifact</value>
        <value>com.genologics.ri.artifactgroup</value>
        <value>com.genologics.ri.configuration</value>
        <value>com.genologics.ri.container</value>
        <value>com.genologics.ri.containertype</value>
        <value>com.genologics.ri.controltype</value>
        <value>com.genologics.ri.exception</value>
        <value>com.genologics.ri.file</value>
        <value>com.genologics.ri.instrument</value>
        <value>com.genologics.ri.lab</value>
        <value>com.genologics.ri.process</value>
        <value>com.genologics.ri.processtemplate</value>
        <value>com.genologics.ri.processtype</value>
        <value>com.genologics.ri.project</value>
        <value>com.genologics.ri.property</value>
        <value>com.genologics.ri.protocolconfiguration</value>
        <value>com.genologics.ri.reagentkit</value>
        <value>com.genologics.ri.reagentlot</value>
        <value>com.genologics.ri.reagenttype</value>
        <value>com.genologics.ri.researcher</value>
        <value>com.genologics.ri.routing</value>
        <value>com.genologics.ri.sample</value>
        <value>com.genologics.ri.stage</value>
        <value>com.genologics.ri.step</value>
        <value>com.genologics.ri.stepconfiguration</value>
        <value>com.genologics.ri.userdefined</value>
        <value>com.genologics.ri.version</value>
        <value>com.genologics.ri.workflowconfiguration</value>
    </util:list>

    <util:map id="genologicsJaxbMarshallerProperties">
        <entry>
            <key><util:constant static-field="javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT"/></key>
            <value type="java.lang.Boolean">true</value>
        </entry>
        <entry>
            <key><util:constant static-field="javax.xml.bind.Marshaller.JAXB_ENCODING"/></key>
            <value>UTF-8</value>
        </entry>
        <entry key="com.sun.xml.bind.namespacePrefixMapper" value-ref="genologicsNamespaceMatcher"/>
    </util:map>

    <bean id="genologicsJaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="packagesToScan" ref="genologicsModelPackages"/>
        <property name="marshallerProperties" ref="genologicsJaxbMarshallerProperties"/>
    </bean>

    <bean name="genologicsMarshallingTool" class="org.cruk.genologics.api.jaxb.JaxbMarshallingTool">
        <property name="marshaller" ref="genologicsJaxbMarshaller"/>
    </bean>

    <bean name="genologicsUnmarshallExceptionAspect" class="org.cruk.genologics.api.jaxb.GenologicsExceptionAspect"/>

    <aop:config proxy-target-class="true">
        <aop:aspect ref="genologicsUnmarshallExceptionAspect">
            <aop:after-returning
                pointcut="execution(public * unmarshal(..)) and bean(genologicsJaxbMarshaller)"
                method="objectUnmarshalled"
                returning="unmarshalled"/>
        </aop:aspect>
    </aop:config>


    <bean id="genologicsJaxbMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <constructor-arg ref="genologicsJaxbMarshaller"/>
    </bean>

    <bean id="genologicsExceptionErrorHandler" class="org.cruk.genologics.api.http.GenologicsFailureResponseErrorHandler">
        <property name="marshaller" ref="genologicsJaxbMarshaller"/>
    </bean>

    <bean id="genologicsRestTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="genologicsClientHttpRequestFactory"/>
        <property name="messageConverters">
            <list>
                <ref bean="genologicsJaxbMessageConverter"/>
            </list>
        </property>
        <property name="errorHandler" ref="genologicsExceptionErrorHandler"/>
    </bean>

    <bean name="genologicsRestClientSnoopingAspect" class="org.cruk.genologics.api.debugging.RestClientSnoopingAspect">
        <property name="marshaller" ref="genologicsMarshallingTool"/>
    </bean>

    <aop:config>
        <aop:aspect ref="genologicsRestClientSnoopingAspect">
            <aop:around
                pointcut="execution(public * get*(..)) and bean(genologicsRestTemplate)"
                method="checkGet"/>
            <aop:around
                pointcut="execution(public * put*(..)) and bean(genologicsRestTemplate)"
                method="checkPutOrPost"/>
            <aop:around
                pointcut="execution(public * post*(..)) and bean(genologicsRestTemplate)"
                method="checkPutOrPost"/>
            <aop:around
                pointcut="execution(public * exchange*(..)) and bean(genologicsRestTemplate)"
                method="checkExchange"/>
            <aop:around
                pointcut="execution(public * delete*(..)) and bean(genologicsRestTemplate)"
                method="checkDelete"/>
        </aop:aspect>
    </aop:config>

    <bean id="genologicsAPI" class="org.cruk.genologics.api.impl.GenologicsAPIImpl">
        <property name="jaxbMarshaller" ref="genologicsJaxbMarshaller"/>
        <property name="restClient" ref="genologicsRestTemplate"/>
        <property name="httpClient" ref="genologicsHttpClient"/>
    </bean>
    
    <bean id="genologicsAPITools" class="org.cruk.genologics.api.tools.GenologicsAPITools" lazy-init="true">
        <property name="genologicsAPI" ref="genologicsAPI"/>
    </bean>
</beans>
